openapi: 3.0.3
info:
  title: Logistics/Transportation API
  version: "1.0.0"
  description: API to quote, create, and manage shipments.
  termsOfService: 'http://frre.utn.edu.ar/terminos'
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: https://api.logistica-utn.com
paths:
  /shipping/cost:
    post:
      summary: Calculate shipping cost
      description: Quotes cost for a shipment. Does not create resources.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShippingCostRequest"
            examples:
              sample:
                value:
                  delivery_address:
                    street: "Av. Dirac 1234"
                    city: "Resistencia"
                    state: "Chaco"
                    postal_code: "3500"
                    country: "AR"
                  departure_postal_code: "3500"
                  products:
                    - id: 1
                      quantity: 2
                      weight: 1.5
                      length: 30
                      width: 20
                      height: 10
                    - id: 2
                      quantity: 1
                      weight: 1.5
                      length: 30
                      width: 50
                      height: 15
      responses:
        "200":
          description: Shipping cost calculated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingCostResponse"
              examples:
                sample:
                  value:
                    currency: "ARS"
                    total_cost: 45.5
                    transport_type: "air"
                    products:
                      - id: 1
                        cost: 20.0
                      - id: 2
                        cost: 25.5
        "400":
          $ref: "#/components/responses/Error400"
        "401":
          $ref: "#/components/responses/Error401"
        "422":
          $ref: "#/components/responses/Error422"
        "500":
          $ref: "#/components/responses/Error500"

  /shipping:
    post:
      summary: Create shipment
      description: Creates a shipment.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateShippingRequest"
            examples:
              sample:
                value:
                  user_id: 456
                  delivery_address:
                    street: "Av. Siempre Viva 123"
                    city: "Resistencia"
                    state: "Chaco"
                    postal_code: "3500"
                    country: "AR"
                  departure_postal_code: "3500"
                  products:
                    - id: 1
                      quantity: 1
                      weight: 1.5
                      length: 30
                      width: 20
                      height: 10
                    - id: 2
                      quantity: 2
                      weight: 1.5
                      length: 30
                      width: 50
                      height: 15
      responses:
        "201":
          description: Shipment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateShippingResponse"
              examples:
                sample:
                  value:
                    shipping_id: 789
                    status: "created"
                    transport_type: "air"
                    estimated_delivery_at: "2025-10-01T00:00:00Z"
        "400":
          $ref: "#/components/responses/Error400"
        "401":
          $ref: "#/components/responses/Error401"
        "409":
          $ref: "#/components/responses/Error409"
        "422":
          $ref: "#/components/responses/Error422"
        "500":
          $ref: "#/components/responses/Error500"

  /shipping/{shipping_id}:
    get:
      summary: Get shipment details
      description: Retrieves status and ETA of a shipment.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: shipping_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Shipment details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingDetail"
              examples:
                sample:
                  value:
                    shipping_id: 789
                    products:
                      - product_id: 12
                        quantity: 2
                      - product_id: 22
                        quantity: 1
                    status: "in_distribution"
                    estimated_delivery_at: "2025-10-01T00:00:00Z"
                    logs:
                      - timestamp: "2025-09-15T09:29:00Z"
                        status: "in_distribution"
                        message: "Shipment is in distribution"
                      - timestamp: "2025-09-12T09:27:00Z"
                        status: "arrived"
                        message: "Package arrived at delivery office"
        "401":
          $ref: "#/components/responses/Error401"
        "404":
          $ref: "#/components/responses/Error404"
        "500":
          $ref: "#/components/responses/Error500"

  /shipping/{shipping_id}/cancel:
    post:
      summary: Cancel a shipment
      description: Cancels an existing shipment that has not yet been dispatched.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: shipping_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Shipment cancelled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelShippingResponse"
              examples:
                sample:
                  value:
                    shipping_id: 789
                    status: "cancelled"
                    cancelled_at: "2025-09-18T19:00:00Z"
        "400":
          description: Shipment already cancelled or in non-cancellable state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                state_conflict:
                  value:
                    code: "bad_request"
                    message: "Shipment cannot be cancelled in current status."
        "401":
          $ref: "#/components/responses/Error401"
        "404":
          $ref: "#/components/responses/Error404"
        "409":
          $ref: "#/components/responses/Error409"
        "500":
          $ref: "#/components/responses/Error500"

  /shipping/{user_id}:
    get:
      summary: Get user shipments
      description: Returns the list of shipments associated with a user.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of user shipments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserShippingListResponse"
              examples:
                sample:
                  value:
                    shipping_list:
                      - shipping_id: 789
                        products:
                          - product_id: 12
                            quantity: 2
                          - product_id: 22
                            quantity: 1
                        status: "in_distribution"
                      - shipping_id: 790
                        products:
                          - product_id: 31
                            quantity: 3
                        status: "delivered"
        "401":
          $ref: "#/components/responses/Error401"
        "404":
          $ref: "#/components/responses/Error404"
        "500":
          $ref: "#/components/responses/Error500"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Address:
      type: object
      required: [street, city, state, postal_code, country]
      properties:
        street: { type: string }
        city: { type: string }
        state: { type: string }
        postal_code:
          type: string
          description: Argentinian Postal Code
          pattern: '^([A-Z]{1}\d{4}[A-Z]{3}$)'
        country:
          type: string
          description: ISO-3166-1 alpha-2 country code (e.g., AR)
          minLength: 2
          maxLength: 2

    ProductItemInput:
      type: object
      required: [id, quantity, weight, length, width, height]
      properties:
        id:
          type: integer
          description: Product ID
        quantity:
          type: integer
          minimum: 1
        weight:
          type: number
          format: float
          description: Weight per unit (kg)
        length:
          type: number
          format: float
          description: Length (cm)
        width:
          type: number
          format: float
          description: Width (cm)
        height:
          type: number
          format: float
          description: Height (cm)

    ProductQty:
      type: object
      required: [product_id, quantity]
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
          minimum: 1

    ShippingLog:
      type: object
      required: [timestamp, status, message]
      properties:
        timestamp:
          type: string
          format: date-time
          description: ISO8601 UTC
        status:
          $ref: "#/components/schemas/ShippingStatus"
        message:
          type: string

    TransportType:
      type: string
      enum: [air, sea, rail, road]

    ShippingStatus:
      type: string
      enum:
        - created
        - reserved
        - in_transit
        - delivered
        - cancelled
        - in_distribution
        - arrived

    ShippingCostRequest:
      type: object
      required: [delivery_address, departure_postal_code, products]
      properties:
        delivery_address:
          $ref: "#/components/schemas/Address"
        departure_postal_code:
          type: string
        products:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ProductItemInput"

    ShippingCostResponse:
      type: object
      required: [currency, total_cost, transport_type, products]
      properties:
        currency:
          type: string
          example: "ARS"
        total_cost:
          type: number
          format: float
        transport_type:
          $ref: "#/components/schemas/TransportType"
        products:
          type: array
          items:
            type: object
            required: [id, cost]
            properties:
              id:
                type: integer
              cost:
                type: number
                format: float

    CreateShippingRequest:
      type: object
      required: [user_id, delivery_address, departure_postal_code, products]
      properties:
        user_id:
          type: integer
        delivery_address:
          $ref: "#/components/schemas/Address"
        departure_postal_code:
          type: string
        products:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ProductItemInput"

    CreateShippingResponse:
      type: object
      required: [shipping_id, status, transport_type, estimated_delivery_at]
      properties:
        shipping_id:
          type: integer
        status:
          $ref: "#/components/schemas/ShippingStatus"
        transport_type:
          $ref: "#/components/schemas/TransportType"
        estimated_delivery_at:
          type: string
          format: date-time
          description: ISO8601 UTC

    ShippingDetail:
      type: object
      required: [shipping_id, products, status, estimated_delivery_at, logs]
      properties:
        shipping_id:
          type: integer
        products:
          type: array
          items:
            $ref: "#/components/schemas/ProductQty"
        status:
          $ref: "#/components/schemas/ShippingStatus"
        estimated_delivery_at:
          type: string
          format: date-time
        logs:
          type: array
          items:
            $ref: "#/components/schemas/ShippingLog"

    CancelShippingResponse:
      type: object
      required: [shipping_id, status, cancelled_at]
      properties:
        shipping_id:
          type: integer
        status:
          $ref: "#/components/schemas/ShippingStatus"
        cancelled_at:
          type: string
          format: date-time
          description: ISO8601 UTC

    UserShippingListResponse:
      type: object
      required: [shipping_list]
      properties:
        shipping_list:
          type: array
          items:
            type: object
            required: [shipping_id, products, status]
            properties:
              shipping_id:
                type: integer
              products:
                type: array
                items:
                  $ref: "#/components/schemas/ProductQty"
              status:
                $ref: "#/components/schemas/ShippingStatus"

    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: "unprocessable_entity"
        message:
          type: string
          example: "Validation failed."
        details:
          oneOf:
            - type: string
            - type: object
            - type: array

  responses:
    Error400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            malformed:
              value:
                code: "bad_request"
                message: "Malformed request body."
    Error401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            token:
              value:
                code: "unauthorized"
                message: "Missing or invalid token."
    Error404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            not_found:
              value:
                code: "not_found"
                message: "Resource not found."
    Error409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            conflict:
              value:
                code: "conflict"
                message: "State conflict."
    Error422:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            validation:
              value:
                code: "unprocessable_entity"
                message: "Validation failed."
                details:
                  field_errors:
                    - field: "products[0].quantity"
                      message: "Must be >= 1"
    Error500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            internal:
              value:
                code: "server_error"
                message: "Unexpected error."
security:
  - bearerAuth: []
